---
- name: Check SSL certificate directory already exists
  stat: path={{ local_cert_dir }}
  register: check_ssl_dir

# - name: Check Etcd SSL certificate already exists
#   when: etcd_peer_url_scheme == 'https'
#   stat: path={{ etcd_peer_key_file }}
#   register: check_etcd_ssl

- name: Create SSL certificate directory
  when: not check_ssl_dir.stat.exists
  file: path={{ local_cert_dir }} state=directory
  register: ssl_dir

- name: Copy openssl conf file to SSL certificate directory
  template: src="openssl.conf.j2" dest={{ local_cert_dir }}/openssl.conf
  register: copy_kube_ssl
#
# - name: Copy Etcd openssl conf file to SSL certificate directory
#   when: etcd_peer_url_scheme == 'https'
#   template: src="openssl-etcd.conf.j2" dest={{ local_cert_dir }}/openssl-etcd.conf
#   register: copy_etcd_ssl

- name: Create Kubernetes certificates
  when: copy_kube_ssl|changed
  register: kube_cert
  command: "{{ item }}"
  with_items:
    - "openssl genrsa -out {{ local_cert_dir }}/ca-key.pem 2048"
    - "openssl req -x509 -new -nodes -key {{ local_cert_dir }}/ca-key.pem -days 1000 -out {{ local_cert_dir }}/ca.pem -subj '/CN=kube-ca'"
    - "openssl genrsa -out {{ local_cert_dir }}/admin-key.pem 2048"
    - "openssl req -new -key {{ local_cert_dir }}/admin-key.pem -out {{ local_cert_dir }}/admin.csr -subj '/CN=kube-admin'"
    - "openssl x509 -req -in {{ local_cert_dir }}/admin.csr -CA {{ local_cert_dir }}/ca.pem -CAkey {{ local_cert_dir }}/ca-key.pem -CAcreateserial -out {{ local_cert_dir }}/admin.pem -days 1000"
    - "openssl genrsa -out {{ local_cert_dir }}/apiserver-key.pem 2048"
    - "openssl req -new -key {{ local_cert_dir }}/apiserver-key.pem -out {{ local_cert_dir }}/apiserver.csr -subj '/CN=kube-apiserver' -config {{ local_cert_dir }}/openssl.conf"
    - "openssl x509 -req -in {{ local_cert_dir }}/apiserver.csr -CA {{ local_cert_dir }}/ca.pem -CAkey {{ local_cert_dir }}/ca-key.pem -CAcreateserial -out {{ local_cert_dir }}/apiserver.pem -days 1000 -extensions v3_req -extfile {{ local_cert_dir }}/openssl.conf"

# - name: Create Etcd https certificates
#   when: etcd_peer_url_scheme == 'https' and not check_etcd_ssl.stat.exists
#   register: etcd_cert
#   command: "{{ item }}"
#   with_items:
#     - "openssl genrsa -out {{ local_cert_dir }}/etcd-key.pem 2048"
#     - "openssl req -new -key {{ local_cert_dir }}/etcd-key.pem -out {{ local_cert_dir }}/etcd.csr -subj '/CN=Etcd-server' -config {{ local_cert_dir }}/openssl-etcd.conf"
#     - "openssl x509 -req -in {{ local_cert_dir }}/etcd.csr -CA {{ local_cert_dir }}/ca.pem -CAkey {{ local_cert_dir }}/ca-key.pem -CAcreateserial -out {{ local_cert_dir }}/etcd.pem -days 1000 -extensions v3_req -extfile {{ local_cert_dir }}/openssl-etcd.conf"
