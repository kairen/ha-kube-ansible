apiVersion: v1
kind: ServiceAccount
metadata:
  name: canal
  namespace: kube-system
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: canal-config
  namespace: kube-system
data:
  canal_iface: "{{ cni_iface }}"
  masquerade: "true"
  cni_network_config: |-
    {
        "name": "k8s-pod-network",
        "type": "calico",
        "log_level": "info",
        "datastore_type": "kubernetes",
        "nodename": "__KUBERNETES_NODE_NAME__",
        "ipam": {
            "type": "host-local",
            "subnet": "usePodCidr"
        },
        "policy": {
            "type": "k8s"
        },
        "kubernetes": {
            "kubeconfig": "{{ kubernetes.config.admin }}"
        }
    }

  net-conf.json: |
    {
      "Network": "{{ pod_network_cidr }}",
      "Backend": {
        "Type": "vxlan"
      }
    }
---
kind: DaemonSet
apiVersion: extensions/v1beta1
metadata:
  name: canal
  namespace: kube-system
  labels:
    k8s-app: canal
spec:
  selector:
    matchLabels:
      k8s-app: canal
  template:
    metadata:
      labels:
        k8s-app: canal
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
    spec:
      hostNetwork: true
      serviceAccountName: canal
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
        - key: "CriticalAddonsOnly"
          operator: "Exists"
      containers:
        - name: calico-node
          image: quay.io/calico/node:v2.4.1
          env:
            - name: DATASTORE_TYPE
              value: "kubernetes"
            - name: FELIX_LOGSEVERITYSYS
              value: "info"
            - name: FELIX_IPTABLESREFRESHINTERVAL
              value: "60"
            - name: FELIX_IPV6SUPPORT
              value: "false"
            - name: CALICO_NETWORKING_BACKEND
              value: "none"
            - name: CLUSTER_TYPE
              value: "k8s,canal"
            - name: CALICO_DISABLE_FILE_LOGGING
              value: "true"
            - name: WAIT_FOR_DATASTORE
              value: "true"
            - name: IP
              value: ""
            - name: K8S_API_ENDPOINT
              value: "{{ lb_api_url }}"
            - name: KUBECONFIG
              value: "{{ kubernetes.config.admin }}"
            - name: NODENAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION
              value: "ACCEPT"
          securityContext:
            privileged: true
          resources:
            requests:
              cpu: 250m
          volumeMounts:
            - mountPath: /lib/modules
              name: lib-modules
              readOnly: true
            - mountPath: /var/run/calico
              name: var-run-calico
              readOnly: false
            - name: pki
              mountPath: "/etc/kubernetes/"
              readOnly: true
        - name: install-cni
          image: quay.io/calico/cni:v1.10.0
          command: ["/install-cni.sh"]
          env:
            - name: CNI_NETWORK_CONFIG
              valueFrom:
                configMapKeyRef:
                  name: canal-config
                  key: cni_network_config
            - name: KUBERNETES_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - mountPath: /host/opt/cni/bin
              name: cni-bin-dir
            - mountPath: /host/etc/cni/net.d
              name: cni-net-dir
        - name: kube-flannel
          image: quay.io/coreos/flannel:v0.9.0-amd64
          command: [ "/opt/bin/flanneld" ]
          args:
          - "--ip-masq"
          - "--kube-subnet-mgr"
          - "--kube-api-url={{ lb_api_url }}"
          - "--kubeconfig-file={{ kubernetes.config.admin }}"
          securityContext:
            privileged: true
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FLANNELD_IFACE
              valueFrom:
                configMapKeyRef:
                  name: canal-config
                  key: canal_iface
            - name: FLANNELD_IP_MASQ
              valueFrom:
                configMapKeyRef:
                  name: canal-config
                  key: masquerade
          volumeMounts:
          - name: run
            mountPath: /run
          - name: flannel-cfg
            mountPath: /etc/kube-flannel/
          - name: pki
            mountPath: "/etc/kubernetes/"
            readOnly: true
      volumes:
        - name: pki
          hostPath:
            path: "/etc/kubernetes"
        - name: lib-modules
          hostPath:
            path: /lib/modules
        - name: var-run-calico
          hostPath:
            path: /var/run/calico
        - name: cni-bin-dir
          hostPath:
            path: /opt/cni/bin
        - name: cni-net-dir
          hostPath:
            path: /etc/cni/net.d
        - name: run
          hostPath:
            path: /run
        - name: flannel-cfg
          configMap:
            name: canal-config
