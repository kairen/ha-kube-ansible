kind: ConfigMap
apiVersion: v1
metadata:
  name: kube-flannel-cfg
  namespace: kube-system
  labels:
    k8s-app: flannel
data:
  cni-conf.json: |
    {
      "name": "k8s-pod-network",
      "type": "flannel",
      "delegate": {
        "isDefaultGateway": true
      }
    }
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: kube-flannel-ds
  namespace: kube-system
  labels:
    k8s-app: flannel
spec:
  template:
    metadata:
      labels:
        k8s-app: flannel
    spec:
      hostNetwork: true
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      serviceAccountName: flannel
      initContainers:
      - name: install-cni
        image: quay.io/coreos/flannel:v0.9.0-amd64
        command:
        - cp
        args:
        - -f
        - /etc/kube-flannel/cni-conf.json
        - /etc/cni/net.d/10-flannel.conf
        volumeMounts:
        - name: cni
          mountPath: /etc/cni/net.d
        - name: flannel-cfg
          mountPath: /etc/kube-flannel/
      containers:
      - name: kube-flannel
        image: quay.io/coreos/flannel:v0.9.0-amd64
        command: [ "/opt/bin/flanneld" ]
        args:
        - --ip-masq
        - --etcd-endpoints={{ etcd_endpoints }}
        - --etcd-prefix={{ flannel_key }}
        - --etcd-cafile={{ etcd.certs.ca }}
        - --etcd-certfile={{ etcd.certs.cert }}
        - --etcd-keyfile={{ etcd.certs.cert_key }}
        - "{{ cni_iface }}"
        securityContext:
          privileged: true
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - name: run
          mountPath: /run
        - name: pki
          mountPath: {{ kubernetes.dir.pki }}
          readOnly: true
        - name: flannel-cfg
          mountPath: /etc/kube-flannel/
        - mountPath: {{ etcd.dir.ssl }}
          name: etcd-ca-certs
          readOnly: true
      volumes:
        - hostPath:
            path: /run
          name: run
        - hostPath:
            path: {{ etcd.dir.ssl }}
            type: DirectoryOrCreate
          name: etcd-ca-certs
        - hostPath:
            path: {{ kubernetes.dir.cni }}
            type: DirectoryOrCreate
          name: cni
        - hostPath:
            path: {{ kubernetes.dir.pki }}
            type: DirectoryOrCreate
          name: pki
        - configMap:
            name: kube-flannel-cfg
          name: flannel-cfg
