---

- name: Create dashboard certificates directory
  file: path={{ kube_dashboard_cert_dir }} state=directory

- name: Check dashboard certificates already exists
  stat: path="{{ kube_dashboard_cert_dir }}/dashboard.crt"
  register: check_cert

- name: Create dashboard certificates
  when: not check_cert.stat.exists
  register: create_cert
  command: "{{ item }}"
  with_items:
    - "openssl genrsa -des3 -passout pass:x -out {{ kube_dashboard_cert_dir }}/dashboard.pass.key 2048"
    - "openssl rsa -passin pass:x -in {{ kube_dashboard_cert_dir }}/dashboard.pass.key -out {{ kube_dashboard_cert_dir }}/dashboard.key"
    - "openssl req -new -key {{ kube_dashboard_cert_dir }}/dashboard.key -out {{ kube_dashboard_cert_dir }}/dashboard.csr -subj '/CN=kube-dashboard'"
    - "openssl x509 -req -sha256 -days 365 -in {{ kube_dashboard_cert_dir }}/dashboard.csr -signkey {{ kube_dashboard_cert_dir }}/dashboard.key -out {{ kube_dashboard_cert_dir }}/dashboard.crt"

- name: Delete dashboard pass key
  when: create_cert|succeeded
  file: path="{{ kube_dashboard_cert_dir }}/dashboard.pass.key" state=absent
  ignore_errors: True

- name: Check dashboard secret already exists
  shell: |
    kubectl --kubeconfig={{ kubeadmin_config }} \
            get secrets -n kube-system | grep kubernetes-dashboard-certs
  run_once: true
  register: check_secret
  ignore_errors: True

- name: Create Kubernetes dashboard secret
  when: check_secret|failed
  shell: |
    kubectl create --kubeconfig={{ kubeadmin_config }} \
                  secret generic kubernetes-dashboard-certs \
                  --from-file={{ kube_dashboard_cert_dir }} -n kube-system
  register: secret_result
  until: secret_result.rc == 0
  retries: 5
  delay: 3
  ignore_errors: True
