apiVersion: v1
kind: ServiceAccount
metadata:
  name: flannel
  namespace: kube-system
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: kube-flannel-cfg
  namespace: kube-system
  labels:
    tier: node
    app: flannel
data:
  cni-conf.json: |
    {
      "name": "k8s-pod-network",
      "type": "flannel",
      "delegate": {
        "isDefaultGateway": true
      }
    }
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: kube-flannel-ds
  namespace: kube-system
  labels:
    tier: node
    app: flannel
spec:
  template:
    metadata:
      labels:
        tier: node
        app: flannel
    spec:
      hostNetwork: true
      nodeSelector:
        beta.kubernetes.io/arch: amd64
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      serviceAccountName: flannel
      initContainers:
      - name: install-cni
        image: quay.io/coreos/flannel:v0.9.0-amd64
        command:
        - cp
        args:
        - -f
        - /etc/kube-flannel/cni-conf.json
        - /etc/cni/net.d/10-flannel.conf
        volumeMounts:
        - name: cni
          mountPath: /etc/cni/net.d
        - name: flannel-cfg
          mountPath: /etc/kube-flannel/
      containers:
      - name: kube-flannel
        image: quay.io/coreos/flannel:v0.9.0-amd64
        command: [ "/opt/bin/flanneld" ]
        args:
        - "--ip-masq"
        - "--etcd-endpoints={{ etcd_endpoints }}"
        - "--etcd-prefix={{ flannel_key }}"
        {% if etcd_peer_url_scheme == 'https' -%}
        - "--etcd-cafile={{ etcd_ca_file }}"
        - "--etcd-keyfile={{ etcd_key_file }}"
        - "--etcd-certfile={{ etcd_cert_file }}"
        {% endif -%}
        - "{{ cni_iface }}"
        securityContext:
          privileged: true
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - name: run
          mountPath: /run
        - name: flannel-cfg
          mountPath: /etc/kube-flannel/
        - name: pki
          readOnly: true
          mountPath: "/etc/kubernetes/"
      volumes:
        - name: run
          hostPath:
            path: /run
        - name: cni
          hostPath:
            path: "{{ cni_etc_dir }}"
        - name: pki
          hostPath:
            path: "/etc/kubernetes"
        - name: flannel-cfg
          configMap:
            name: kube-flannel-cfg
